public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int r = BSR(matrix, target);
        if (r == -1) {
            return false;
        }

        bool isFound = BinarySearch(matrix, r, target);
        return isFound;
    }

    public int BSR(int[][] matrix, int target) {
        int low = 0;
        int high = matrix.Length - 1;
        int lc = matrix[0].Length - 1;

        while (low <= high) {
            int mid = (low + high) / 2;
            if (matrix[mid][0] <= target && target <= matrix[mid][lc]) {
                return mid;
            } else if (matrix[mid][0] < target) {
                low = mid + 1;
            } else if (matrix[mid][0] > target) {
                high = mid - 1;
            }
        }
        return -1;
    }

    public bool BinarySearch(int[][] matrix, int r, int target) {
        int low = 0;
        int high = matrix[0].Length - 1;

        while (low <= high) {
            int mid = (low + high) / 2;
            if (matrix[r][mid] == target) {
                return true;
            } else if (matrix[r][mid] < target) {
                low = mid + 1;
            } else if (matrix[r][mid] > target) {
                high = mid - 1;
            }
        }
        return false;
    }
}
